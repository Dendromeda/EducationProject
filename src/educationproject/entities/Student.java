/**
 * This file was generated by the Jeddict
 */
package educationproject.entities;

import java.time.LocalDate;
import java.time.Month;
import java.util.ArrayList;
import java.sql.Date;
import java.util.List;
import javax.persistence.AttributeConverter;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Converter;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

/**
 * @author Jakob
 */
@Entity
public class Student {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private int id;

    @Basic
    private String name;

    @Basic
    private Date birthDate;

    @ManyToOne
    private Program program;

    @OneToMany(mappedBy = "student", cascade = CascadeType.ALL)
    private List<Grade> grades;

    public Student(String name, LocalDate birthDate) {
        this.name = name;
        //this.birthDate = birthDate;
        this.birthDate = Date.valueOf(birthDate);
        grades = new ArrayList();
    }

    public Student() {
    }
    
    

    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Date getBirthDate() {
        return this.birthDate;
    }

    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }

    public Program getProgram() {
        return this.program;
    }

    public void setProgram(Program program) {
        this.program = program;
    }

    public List<Grade> getGrades() {
        if (grades == null) {
            grades = new ArrayList<>();
        }
        return this.grades;
    }

    public void setGrades(List<Grade> grades) {
        this.grades = grades;
    }

    public void addGrade(Grade grade) {
        getGrades().add(grade);
        grade.setStudent(this);
    }
    
    public void addGrade(String level, Course course) {
        Grade grade = new Grade(this, course, level);
        getGrades().add(grade);
    }

    public void removeGrade(Grade grade) {
        getGrades().remove(grade);
        grade.setStudent(null);
    }
    
    public String toString(){
        return String.format("[%3d] %15s (%s)", id, name, birthDate.toString());
    }

    @Converter(autoApply=true)
    public class DateConverter implements AttributeConverter<LocalDate, Date>{
        

        @Override
        public LocalDate convertToEntityAttribute(Date dbData) {
            if (dbData != null)
                return dbData.toLocalDate();
            return null;
        }

        @Override
        public Date convertToDatabaseColumn(LocalDate attribute) {
            if (attribute != null   )
                return Date.valueOf(attribute);
            return null;
        }
 
        
    }
    
}