/**
 * This file was generated by the Jeddict
 */
package educationproject.entities;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;

/**
 * @author Jakob
 */
@Entity
public class Program {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private int id;

    @Basic
    private String name;

    
    @OneToMany(mappedBy = "program", cascade = CascadeType.PERSIST)
    private List<Student> students;

    @OneToMany (cascade = CascadeType.PERSIST)
    private List<Course> courses;

    public Program(String name) {
        this.name = name;
        students = new ArrayList();
        courses = new ArrayList();
    }

    public Program() {
    }
    
    

    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }
    
    public List<Student> getStudents() {
        if (students == null) {
            students = new ArrayList<>();
        }
        return this.students;
    }

    public void setStudents(List<Student> students) {
        this.students = students;
    }

    public void addStudent(Student student) {
        getStudents().add(student);
        student.setProgram(this);
    }

    public void removeStudent(Student student) {
        getStudents().remove(student);
        student.setProgram(null);
    }

    public List<Course> getCourses() {
        if (courses == null) {
            courses = new ArrayList<>();
        }
        return this.courses;
    }

    public void setCourses(List<Course> courses) {
        this.courses = courses;
    }

    public void addCourse(Course course) {
        getCourses().add(course);
    }

    public void removeCourse(Course course) {
        getCourses().remove(course);
    }
    
    public String toString(){
        return String.format("[%3d] %s", id, name);
    }
    
    public String getInfo(){
        StringBuilder sb = new StringBuilder("Program: ");
        sb.append(String.format("[%d] %s\n\n", id, name))
            .append("Courses:\n");
        for (Course course : courses) {
                sb.append(course.getName())
                  .append(String.format(" (%s)\n", course.getTeacher().getName()));
        }
        sb.append("\nStudents:\n");
        for (Student student : students) {
            sb.append(String.format("%20s (%s)", student.getName(), student.getBirthDate().toString()))
              .append('\n');
        }
        
        return sb.toString();
    }

}